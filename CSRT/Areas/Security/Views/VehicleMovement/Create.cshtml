
@using Jmelosegui.Mvc.GoogleMap
@*@using MapBuilder.Library.ExtensionMethods*@
@model CSRT.Areas.Security.ViewModels.VehicleMovementViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //string[] libraries = { "places" };


}

<h2>Create</h2>

@using (Html.BeginForm("Create", "VehicleMovement"))
{
   
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)

    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-12">
            @{
                Html.GoogleMap()
                    .Name("map")
                    .Height(300)
                    .Center(c => c.UseCurrentPosition()
                                    //this will be the Latitude if your map do not support
                                    //geolocation or the client denies the location sharing
                                    .Latitude(23d)
                                    //this will be the Longitude if your map do not support
                                    //geolocation or the client denies the location sharing
                                    .Longitude(-82.3d))
                    .Markers(m => m.Add()
                                    .Title("Hello Geolocation!")
                                    .Window(window => window.Add()
                                        .MaxWidth(200)
                                        .ZIndex(3)
                                        .DisableAutoPan(false)
                                        .Content(
                                        @<text>
                                            <div>
                                                <h1>Geolocation</h1>
                                                <div id="bodyContent">
                                                    <p>
                                                        This marker is placed in your current location if your browser support
                                                        Geolocation and you have allowed the location sharing, otherwise it is placed in the map default location.
                                                    </p>
                                                </div>
                                            </div>
                                        </text>
                                        )
                                                    )
                                    ).ApiKey("AIzaSyCA5IJKaLrE6oXiNOLYiRS9UpZ4cZ6qmlM")
                                    .Render();
            }
        </div>
        @*<div class="col-xs-6 col-md-4">.col-xs-6 .col-md-4</div>*@
    </div>
    <br />
    <br />
    <p class="alert alert-info">All fields are <strong>required</strong>.</p>
    <div class="row">
        <div class="col-lg-12">
            <div class="  col-sm-6 col-lg-6  col-md-6">
                <div class="form-group">
        
                    @Html.LabelFor(m => m.Moto)
                    @Html.DropDownListFor(m => m.MotoId, new SelectList(Model.Mottors,"Id","PlateNumber", Model.MotoId) , "Select Type of Vehicle Plate Number", new {@class = "form-control", autofocus = "autofocus"})
                    @Html.ValidationMessageFor(m => m.MotoId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Driver)
                    @Html.DropDownListFor(m => m.DriverId, new SelectList(Model.Drivers,"Id","Name",Model.DriverId) , "Select Type of Driver", new {@class = "form-control", autofocus = "autofocus"})
                    @Html.ValidationMessageFor(m => m.DriverId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Department)
                    @Html.DropDownListFor(m => m.DepartmentId, new SelectList(Model.Departments, "Id", "Name", Model.DepartmentId), "Select Driver Name", new { @class = "form-control", autofocus = "autofocus" })
                    @Html.ValidationMessageFor(m => m.DepartmentId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.NumberOfPeopleGoingOut)
                    @Html.TextBoxFor(m => m.NumberOfPeopleGoingOut, new { @class = "form-control", placeholder = "Number of staff" })
                    @Html.ValidationMessageFor(m => m.NumberOfPeopleGoingOut, "", new { @class = "text-danger" })
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(m => m.NameOfPeopleGoingOut)
                    @Html.TextBoxFor(m => m.NameOfPeopleGoingOut, new { @class = "form-control", multiple = true, placeholder = "Name(s) of staff" })
                    @Html.ValidationMessageFor(m => m.NumberOfPeopleGoingOut, "", new { @class = "text-danger" })
                </div>
                
            </div>
            <div class="col-lg-6 col-md-6">
               
                <div class="form-group">
                    @Html.LabelFor(m => m.Date)
                    @Html.TextBoxFor(m => m.Date, new { @class = "form-control datepicker", placeholder = "Date" })
                    @Html.ValidationMessageFor(m => m.Date, "", new { @class = "text-danger" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(m => m.TimeOut)
                    <div class="bootstrap-timepicker timepicker inner-addon left-addon">
                        
                        <input id="timepicker1" type="text" name="TimeOut" placeholder="Time Out" class="form-control">
                       
                    </div>
                    @Html.ValidationMessageFor(m => m.TimeOut, "", new { @class = "text-danger" })
                </div>
                   
                        <div class="form-group">
                            @Html.LabelFor(m => m.MilageOut)
                            @Html.TextBoxFor(m => m.MilageOut, new { @class = "form-control", multiple = true, placeholder = "Milage out" })
                            @Html.ValidationMessageFor(m => m.MilageOut, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Purpose)
                            @Html.TextBoxFor(m => m.Purpose, new { @class = "form-control", multiple = true, placeholder = "Purose Of Your Official Assigment" })
                            @Html.ValidationMessageFor(m => m.Purpose, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Destination)
                            @Html.TextBoxFor(m => m.Destination, new { @class = "form-control", multiple = true, placeholder = "Destination" })
                            @Html.ValidationMessageFor(m => m.Destination, "", new { @class = "text-danger" })
                        </div>
                    </div>
                  
                </div>
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="col-lg-4 col-md-4  col-sm-4 col-xs-6">
                    <button type="submit" class="btn btn-primary btn-lg pull-right">Save</button>
                </div>

            </div>
        </div>
        
    </div>
    
   
    
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @(Html.GoogleMap().ScriptRegistrar())

}