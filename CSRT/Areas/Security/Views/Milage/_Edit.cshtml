@model CSRT.Areas.Security.ViewModels.MilageViewModel






<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Edit Milage </h4>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        <div class="form-horizontal">

      
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            @Html.HiddenFor(x => x.VehicleMovementId)
            @Html.HiddenFor(x => x.Id)
       
            <div class="form-group">
                @Html.LabelFor(model => model.MilageOut, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MilageOut, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.MilageOut, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr/>
            <div class="form-group">
                @Html.LabelFor(model => model.TimeOut, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.TimeOut, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.TimeOut, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.MilageIn, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MilageIn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MilageIn, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr/>
            <div class="form-group">
                @Html.LabelFor(model => model.TimeIn, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <div class="bootstrap-timepicker timepicker inner-addon left-addon">

                        <input id="timepicker1" type="text" name="TimeIn" placeholder="4:33 PM" class="form-control">

                    </div>
                    @Html.ValidationMessageFor(model => model.TimeIn, "", new { @class = "text-danger" })
                </div>
            </div>

          
        

        </div>
    </div>


    <div class="modal-footer">
        <button class="btn" data-dismiss="modal">Cancel</button>
        <input class="btn btn-primary" type="submit" value="Save" />
    </div>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    
    

}